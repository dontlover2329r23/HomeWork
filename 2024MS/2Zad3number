import numpy as np
from scipy import stats


# Заданная выборка данных
data = [122,116.8,118.5,118.5,121,121.5,126,121.8,121.5,122.9,119,121,121,125.9,122,119.2,126,125,116.7,121,120,124.5,
121,127,118.3,117,120,117.8,120.8,119,125,120.6,120.2,122,118.7,120,121.4,119.5,125,123,118,122,122.5,119,123,117.2,
119.5,125.1,124.3,122.8,124,121.5,126.5,122.5,123,115,126.2,120.5,123,122.5,123,121.5,116.9,123.8,121.5,118,121.7,
120,122.5,123,121,122.5,119.5,122.5,120.5,121,121.2,118.9,124,123,119.2,119.5
]


# Точечная оценка по полным данным
mu_full = np.mean(data)

# Группировка данных
data_grouped = np.array([116.8, 118.5, 121.0])  # Пример группированных данных

# Точечная оценка по группированным данным
mu_grouped = np.sum(data_grouped) / len(data_grouped)

# Доверительныйинтервал
alpha = 0.01  # Уровень значимости
Q = 1 - alpha  # Уровень надежности

# Вычисляем стандартную ошибку
se = np.std(data) / np.sqrt(len(data))

# Находим квантили нормального распределения
z = stats.norm.ppf(1 - alpha/2)

# Вычисляем доверительный интервал
lower_bound = mu_full - z * se
upper_bound = mu_full + z * se

print("Точечная оценка по полным данным (математическое ожидание):", mu_full)
print("Точечная оценка по группированным данным (математическое ожидание):", mu_grouped)
print("Доверительный интервал с уровнем надежности 0.99 (двусторонний): ({:.2f}, {:.2f})".format(lower_bound, upper_bound))
